/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

 

plugins {
    // Apply the java-library plugin for API and implementation separation.
	//id 'java'
    id 'java-library'
	id 'groovy'
	id 'maven-publish'
}

group = 'com.github.krishnact'
version = '0.4.14'


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
	api 'org.slf4j:slf4j-api:2.0.9'

	implementation 'org.apache.groovy:groovy-cli-commons:4.0.16'
	api 'org.apache.groovy:groovy-json:4.0.16'
	api 'org.apache.groovy:groovy-templates:4.0.16'
	api 'org.apache.groovy:groovy-sql:4.0.16'
	api 'org.apache.groovy:groovy-xml:4.0.16'
//	api 'org.apache.logging.log4j:log4j-core:2.20.0'
//	api 'org.apache.logging.log4j:log4j-api:2.20.0'

}

sourceSets {
	main {
//		groovy {
//			srcDir 'src/main/java'
//		}
	  output.resourcesDir = "build/classes/groovy/main"
	}
	test {
	  output.resourcesDir = "build/classes/groovy/test"
	}
  }
  
// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
	withJavadocJar()
	withSourcesJar()
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId = group
			artifactId = 'commandlinetool-base'
			version = version
			from components.java
		}
	}
	repositories {
		mavenLocal()
	}
}
